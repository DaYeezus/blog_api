version: "3.8"
networks:
  app-network:
    driver: bridge
services:
  api:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: Blog_API
    environment:
       MODE: production
       POSTGRES_USER: admin
       POSTGRES_PASSWORD: admin
       POSTGRES_DB_PREFIX: db
       POSTGRES_DB_NAME: Blog_App
       POSTGRES_DB_HOST: postgres
       POSTGRES_DB_PORT: 5432
       REDIS_HOST: redis
       REDIS_PORT: 6379
    env_file:
      - ./.env
    ports:
      - '3000:3000'
    networks:
      - app-network
    depends_on:
      - redis
      - postgres
    volumes:
      - .:/home/node
      - /home/node/node_modules
    restart: unless-stopped

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    networks:
      - app-network
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres:/var/lib/postgresql/data
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - app-network
    depends_on:
      - postgres
    command:
      - CREATE DB Blog_App
  redis:
    image: redis:alpine
    command:
      - redis-server
    ports:
      - "6379:6379"
    container_name: redis
    networks:
      - app-network
    volumes:
      - redis-data:/data
      - redis-conf:/usr/local/etc/redis/redis.conf
volumes:
  postgres:
  pgadmin-data:
  redis-data:
  redis-conf:
